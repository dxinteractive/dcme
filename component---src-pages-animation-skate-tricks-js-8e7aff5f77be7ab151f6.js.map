{"version":3,"sources":["webpack:///./src/pages/animation/skate-tricks-mdx.mdx","webpack:///./src/pages/animation/skate-tricks.js","webpack:///./src/shape/ContentNav.jsx"],"names":["_frontmatter","layoutProps","MDXLayout","MDXContent","components","props","mdxType","style","position","paddingBottom","marginBottom","src","frameBorder","scrolling","width","height","top","left","allowFullScreen","parentName","isMDXComponent","title","modifier","content","pageNav","nav","href","className"],"mappings":"8OAKaA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,sBACD,OAAO,YAACH,EAAD,OAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,sCACA,+aACA,+IACA,mBAAKC,MAAO,CACVC,SAAU,WACVC,cAAe,SACfC,aAAc,SAEhB,sBAAQC,IAAI,sDAAsDC,YAAY,IAAIC,UAAU,KAAKC,MAAM,OAAOC,OAAO,OAAOR,MAAO,CAC/HC,SAAU,WACVQ,IAAK,EACLC,KAAM,GACLC,iBAAe,KAEpB,mBAAKX,MAAO,CACVC,SAAU,WACVC,cAAe,SACfC,aAAc,SAEhB,sBAAQC,IAAI,+CAA+CC,YAAY,IAAIC,UAAU,KAAKC,MAAM,OAAOC,OAAO,OAAOR,MAAO,CACxHC,SAAU,WACVQ,IAAK,EACLC,KAAM,GACLC,iBAAe,KAEpB,2CACA,gUACA,qCAAoB,sBAAQC,WAAW,KAAnB,eAApB,iTACA,sUACA,4BAAW,sBAAQA,WAAW,KAAnB,cAAX,wKAKJhB,EAAWiB,gBAAiB,G,iCCtD5B,sDAKe,4BAAM,uBACjBC,MADiB,eAEjBC,SAAS,qBAET,uBACIC,QAAS,kBAAM,4BAAN,OACTC,QAAS,CAAC,uB,+ECLZC,EAAM,kBAAM,2BACd,2BACI,uBAAMC,KAAK,KAFD,oBAId,2BACI,uBAAGC,UAAH,OAAoBD,KAAK,oCALf,WAOd,2BACI,uBAAGC,UAAH,OAAoBD,KAAK,kCARf,4BAUd,uBAAoBJ,SAAS,WAVf,SAWd,2BACI,uBAAMI,KAAK,0BAZD,yBAcd,2BACI,uBAAMA,KAAK,oBAfD,mBAiBd,2BACI,uBAAMA,KAAK,WAlBD,UAoBd,2BACI,uBAAMA,KAAK,uBArBD,sBAuBd,2BACI,uBAAMA,KAAK,eAxBD,cA0Bd,2BACI,uBAAMA,KAAK,qBA3BP,sBA4CG,uBAAgB,2BAAYD,IAAKA,GAAjC","file":"component---src-pages-animation-skate-tricks-js-8e7aff5f77be7ab151f6.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Skate tricks`}</h1>\n    <p>{`A long time ago I had a skate tricks dictionary site. It had a robot character performing examples of lots of different skate tricks with definitions. It became moderately well known, I think the link was even printed in Transworld skate magazine at one point. In a way it killed itself because there was a gigantic influx of web traffic, and I couldn't afford a web hosting upgrade so had to take it down.`}</p>\n    <p>{`I recently found these 400+ skate animtions and decided to revive it just a little, as a kind of animated infographic.`}</p>\n    <div style={{\n      position: 'relative',\n      paddingBottom: '52.91%',\n      marginBottom: '1rem'\n    }}>\n    <iframe src='https://gfycat.com/ifr/DeafeningInexperiencedFerret' frameBorder='0' scrolling='no' width='100%' height='100%' style={{\n        position: 'absolute',\n        top: 0,\n        left: 0\n      }} allowFullScreen />\n    </div>\n    <div style={{\n      position: 'relative',\n      paddingBottom: '52.91%',\n      marginBottom: '1rem'\n    }}>\n    <iframe src='https://gfycat.com/ifr/DisloyalFabulousBison' frameBorder='0' scrolling='no' width='100%' height='100%' style={{\n        position: 'absolute',\n        top: 0,\n        left: 0\n      }} allowFullScreen />\n    </div>\n    <h2>{`A few bonus notes`}</h2>\n    <p>{`Many of these tricks can be called a few different things. Like the 360 ollies with a kickflip or heelflip can be phrased in many ways, so I just called them what I always have. The point isn't to have a single name, but one that describes the trick in a way that other people can understand it.`}</p>\n    <p>{`I called the `}<strong parentName=\"p\">{`crooked 5-0`}</strong>{` that rather than a suski grind because suski traditionally only refers to backside ones (that's the way Suski did them), where as the term crooked 5-0 can describe either. The frontside / backside restriction on suski's is slowly disappearing in common use, but I've always called those crooked 5-0s.`}</p>\n    <p>{`The same might be argued for salad grind, but 'overcrooked 5-0' certainly isn't common enough to warrant using it for the sake of keeping things hisorically accurate - most people I know on and off the internet use salad to describe both frontside and backside ones, and I'm going with what is common.`}</p>\n    <p>{`The `}<strong parentName=\"p\">{`losi grind`}</strong>{` isn't a misspelling of lazy grind - it's named after its inventor Alan Losi. You can still probably call it a lazy grind as that terms has become quite prevalent.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// @flow\nimport React from 'react';\nimport Layout from 'layout/Layout';\nimport Markdown from './skate-tricks-mdx.mdx';\nimport ContentNav from 'shape/ContentNav';\n\nexport default () => <Layout\n    title=\"Skate tricks\"\n    modifier=\"defaultBackground\"\n>\n    <ContentNav\n        content={() => <Markdown />}\n        pageNav={[\n            '# Skate tricks'\n        ]}\n    />\n</Layout>;\n","// @flow\nimport React from 'react';\nimport {NavigationList} from 'dcme-style/src/deprecated';\nimport {NavigationListItem} from 'dcme-style/src/deprecated';\nimport {ContentNav} from 'dcme-style/src/deprecated';\nimport {Link} from 'dcme-style/src/deprecated';\n\nconst nav = () => <NavigationList>\n    <NavigationListItem>\n        <Link href=\"/\">damienclarke.me</Link>\n    </NavigationListItem>\n    <NavigationListItem>\n        <a className=\"Link\" href=\"https://github.com/dxinteractive\">github</a>\n    </NavigationListItem>\n    <NavigationListItem>\n        <a className=\"Link\" href=\"mailto:dxinteractive@gmail.com\">dxinteractive@gmail.com</a>\n    </NavigationListItem>\n    <NavigationListItem modifier=\"section\">Stuff</NavigationListItem>\n    <NavigationListItem>\n        <Link href=\"/#Javascript-libraries\">Javascript libraries</Link>\n    </NavigationListItem>\n    <NavigationListItem>\n        <Link href=\"/#Effects-pedals\">Effects pedals</Link>\n    </NavigationListItem>\n    <NavigationListItem>\n        <Link href=\"/#Music\">Music</Link>\n    </NavigationListItem>\n    <NavigationListItem>\n        <Link href=\"/#Arduino-libraries\">Arduino libraries</Link>\n    </NavigationListItem>\n    <NavigationListItem>\n        <Link href=\"/#Animation\">Animation</Link>\n    </NavigationListItem>\n    <NavigationListItem>\n        <Link href=\"/#Old-Flash-Games\">Old Flash games</Link>\n    </NavigationListItem>\n    {/*<NavigationListItem modifier=\"section\">Effects Pedals</NavigationListItem>\n    <NavigationListItem>\n        <Link href=\"/effects-pedals/blend2\">Blend2</Link>\n    </NavigationListItem>\n    <NavigationListItem>\n        <Link href=\"/effects-pedals/shoosh\">Shoosh</Link>\n    </NavigationListItem>\n    <NavigationListItem>\n        <Link href=\"/effects-pedals/bazz-fuzz-face\">Bazz Fuzz Face</Link>\n    </NavigationListItem>\n    <NavigationListItem>\n        <Link href=\"/effects-pedals/dxlfo\">DXLFO</Link>\n    </NavigationListItem>*/}\n</NavigationList>;\n\nexport default (props: any) => <ContentNav nav={nav} {...props} />;\n"],"sourceRoot":""}