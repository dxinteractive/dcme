{"version":3,"sources":["webpack:///./src/rgbsky/RGBSkyCanvas.jsx","webpack:///./src/pages/rgbsky/index.js"],"names":["THREE","_interopRequireWildcard","__webpack_require__","_react","_reactThreeFiber","Stars","group","useRef","theta","useRender","r","Math","sin","degToRad","s","cos","current","rotation","set","scale","_useMemo","useMemo","geo","SphereBufferGeometry","mat","MeshBasicMaterial","color","Color","coords","Array","fill","map","random","vertices","_useMemo2","_slicedToArray2","default","createElement","ref","_ref","i","_ref2","p1","p2","p3","key","geometry","material","position","Canvas","camera","intensity","_interopRequireDefault","_dcmeStyle","_RGBSkyCanvas","AppFrame","title","content"],"mappings":"+LACAA,EAAAC,EAAAC,EAAA,MACAC,EAAAF,EAAAC,EAAA,IAMAE,EAAAF,EAAA,KAGA,SAASG,IACL,IAAIC,GAAQ,EAAAH,EAAAI,UACRC,EAAQ,GAEZ,EAAAJ,EAAAK,WAAU,WAEN,IAAMC,EAAI,EAAIC,KAAKC,IAAIZ,EAAMW,KAAKE,SAAUL,GAAS,KAC/CM,EAAIH,KAAKI,IAAIf,EAAMW,KAAKE,SAAiB,EAARL,IACvCF,EAAMU,QAAQC,SAASC,IAAIR,EAAGA,EAAGA,GACjCJ,EAAMU,QAAQG,MAAMD,IAAIJ,EAAGA,EAAGA,KATrB,IAAAM,GAYwB,EAAAjB,EAAAkB,SAAQ,WACzC,IAAMC,EAAM,IAAItB,EAAMuB,qBAAqB,EAAG,GAAI,IAC5CC,EAAM,IAAIxB,EAAMyB,kBAAkB,CACpCC,MAAO,IAAI1B,EAAM2B,MAAM,eAErBC,EAAS,IAAIC,MAAM,KAAMC,OAAOC,IAAI,iBAAM,CAAiB,IAAhBpB,KAAKqB,SAAiB,IAAqB,IAAhBrB,KAAKqB,SAAiB,IAAqB,IAAhBrB,KAAKqB,SAAiB,OAC7H,MAAO,CAACV,EAAKE,EAAKS,EAAUL,IAC7B,IAnBUM,GAAA,EAAAC,EAAAC,SAAAhB,EAAA,GAYNE,EAZMY,EAAA,GAYDV,EAZCU,EAAA,GAYID,EAZJC,EAAA,GAYcN,EAZdM,EAAA,GAqBb,OAAO/B,EAAAiC,QAAAC,cAAA,SAAOC,IAAKhC,GACdsB,EAAOG,IAAI,SAAAQ,EAAeC,GAAM,IAAAC,GAAA,EAAAN,EAAAC,SAAAG,EAAA,GAAnBG,EAAmBD,EAAA,GAAfE,EAAeF,EAAA,GAAXG,EAAWH,EAAA,GAC7B,OAAOtC,EAAAiC,QAAAC,cAAA,QAAMQ,IAAKL,EAAGM,SAAUxB,EAAKyB,SAAUvB,EAAKwB,SAAU,CAACN,EAAIC,EAAIC,kBAKnE,kBAAMzC,EAAAiC,QAAAC,cAACjC,EAAA6C,OAAD,CACjBC,OAAQ,CACJF,SAAU,CAAC,EAAG,EAAG,KAGrB7C,EAAAiC,QAAAC,cAAA,gBAAcX,MAAM,cACpBvB,EAAAiC,QAAAC,cAAA,cAAYX,MAAM,QAAQyB,UAAW,EAAGH,SAAU,CAAC,GAAI,GAAI,MAC3D7C,EAAAiC,QAAAC,cAAChC,EAAD,sHC7CJ,IAAAF,EAAAiD,EAAAlD,EAAA,IACAmD,EAAAnD,EAAA,IACAoD,EAAAF,EAAAlD,EAAA,gBAEe,kBAAMC,EAAAiC,QAAAC,cAACgB,EAAAE,SAAD,CACjBC,MAAO,iBAAM,UACbC,QAAS,kBAAMtD,EAAAiC,QAAAC,cAACiB,EAAAlB,QAAD","file":"component---src-pages-rgbsky-index-js-dd4845adda6fa12bfdb3.js","sourcesContent":["// @flow\nimport * as THREE from 'three/src/Three';\nimport React from 'react';\n// $FlowFixMe\nimport {useRef} from 'react';\n// $FlowFixMe\nimport {useMemo} from 'react';\n\nimport {Canvas} from 'react-three-fiber';\nimport {useRender} from 'react-three-fiber';\n\nfunction Stars() {\n    let group = useRef();\n    let theta = 0;\n\n    useRender(() => {\n        // Some things maybe shouldn't be declarative, we're in the render-loop here with full access to the instance\n        const r = 5 * Math.sin(THREE.Math.degToRad((theta += 0.1)));\n        const s = Math.cos(THREE.Math.degToRad(theta * 2));\n        group.current.rotation.set(r, r, r);\n        group.current.scale.set(s, s, s);\n    });\n\n    const [geo, mat, vertices, coords] = useMemo(() => {\n        const geo = new THREE.SphereBufferGeometry(1, 10, 10);\n        const mat = new THREE.MeshBasicMaterial({\n            color: new THREE.Color('lightblue')\n        });\n        const coords = new Array(2000).fill().map(() => [Math.random() * 800 - 400, Math.random() * 800 - 400, Math.random() * 800 - 400])\n        return [geo, mat, vertices, coords];\n    }, []);\n\n    return <group ref={group}>\n        {coords.map(([p1, p2, p3], i) => {\n            return <mesh key={i} geometry={geo} material={mat} position={[p1, p2, p3]} />;\n        })}\n    </group>;\n}\n\nexport default () => <Canvas\n    camera={{\n        position: [0, 0, 0]\n    }}\n>\n    <ambientLight color=\"lightblue\" />\n    <pointLight color=\"white\" intensity={1} position={[10, 10, 10]} />\n    <Stars />\n</Canvas>;\n","// @flow\nimport React from 'react';\nimport {AppFrame} from 'dcme-style';\nimport RGBSkyCanvas from '../../rgbsky/RGBSkyCanvas';\n\nexport default () => <AppFrame\n    title={() => \"rgbsky\"}\n    content={() => <RGBSkyCanvas />}\n/>;\n"],"sourceRoot":""}